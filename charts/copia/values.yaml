replicaCount: 1
clusterDomain: cluster.local
image:
  repository: copiaio/copia
  pullPolicy: Always
imagePullSecrets: []
service:
  http:
    type: NodePort
    port: 3000
    targetPort: 4001
    # clusterIP: None
    #loadBalancerIP:
    #nodePort:
    #externalTrafficPolicy:
    #externalIPs:
    loadBalancerSourceRanges: []
    annotations:
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: git.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - git.example.com
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:
nodeSelector: {}
tolerations: []
affinity: {}
deployment:
  env: []
    # - name: VARIABLE
    #   value: my-value
  terminationGracePeriodSeconds: 60
  labels: {}
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
persistence:
  enabled: true
  existingClaim:
  size: 10Gi
  accessModes:
    - ReadWriteOnce
  labels: {}
  annotations: {}
  # storageClass:
# additional volumes to add to the deployment.
extraVolumes:
extraVolumeMounts:
# bash shell script copied verbatim to the start of the init-container.
initPreScript: ""
# Configure commit/action signing prerequisites
signing:
  enabled: false
  gpgHome: /data/git/.gnupg
copia:
  livenessProbe:
    enabled: false
    initialDelaySeconds: 200
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10
  readinessProbe:
    enabled: false
    initialDelaySeconds: 5
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  startupProbe:
    enabled: false
    initialDelaySeconds: 60
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10
  # config:
  #   APP_NAME: "Copia"
  #   RUN_MODE: production
  #   oauth2:
  #     JWT_SECRET: <REQUIRED>
  #   security:
  #     INTERNAL_TOKEN: <REQUIRED>
  #   server:
  #     LFS_JWT_SECRET: <REQUIRED>
  #   copia:
  #     LICENSE_KEY: <REQUIRED>
