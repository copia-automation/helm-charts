apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  revisionHistoryLimit: 2
  strategy:
    {{- if and .Values.deployment.strategy (eq .Values.deployment.strategy "Recreate") }}
    type: Recreate
    {{- else }}
    type: RollingUpdate
    rollingUpdate:
      {{- with .Values.deployment.rollingUpdate }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.copia.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- if .Values.deployment.labels }}
        {{- toYaml .Values.deployment.labels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.serviceAccountName }}
      serviceAccountName: "{{ .Values.deployment.serviceAccountName }}"
      {{- end }}
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ include "app.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - gitea
          env:
            {{- if .Values.signing.enabled }}
            - name: GNUPGHOME
              value: {{ .Values.signing.gpgHome }}
            {{- end }}
            {{- if .Values.deployment.env }}
            {{- toYaml .Values.deployment.env | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "app.fullname" . }}-configmap
          ports:
            - name: ssh
              containerPort: {{ .Values.deployment.configuration.POD_SSH_LISTEN_PORT }}
            - name: http
              containerPort: {{ .Values.copia.config.server.HTTP_PORT }}
              {{- if .Values.deployment.configuration.ENABLE_PPROF }}
            - name: profiler
              containerPort: {{ .Values.deployment.configuration.PPROF_PORT }}
              {{- end }}
          lifecycle:
            preStop:
              exec:
                command: [
                  "sh", "-c",
                  "sleep 10 && /usr/local/bin/gitea manager shutdown",
                ]
          {{- if .Values.copia.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.copia.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.copia.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.copia.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.copia.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.copia.livenessProbe.failureThreshold }}
          {{- else if .Values.copia.customLivenessProbe }}
          livenessProbe:
            {{- toYaml .Values.copia.customLivenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.copia.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.copia.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.copia.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.copia.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.copia.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.copia.readinessProbe.failureThreshold }}
          {{- else if .Values.copia.customReadinessProbe }}
          readinessProbe:
            {{- toYaml .Values.copia.customReadinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.copia.startupProbe.enabled }}
          startupProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.copia.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.copia.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.copia.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.copia.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.copia.startupProbe.failureThreshold }}
          {{- else if .Values.copia.customStartupProbe }}
          startupProbe:
            {{- toYaml .Values.copia.customStartupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name     : temp
              mountPath: {{ .Values.deployment.configuration.GITEA_TEMP }}
            - name     : data
              mountPath: {{ .Values.deployment.configuration.GITEA_WORK_DIR }}
            {{- if (hasKey .Values.deployment "configuration") }}
            - name     : config
              mountPath: {{ .Values.deployment.configuration.GITEA_APP_INI }}
              subPath  : app.ini
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- if (hasKey .Values.copia "config") }}
        - name: config
          secret:
            secretName: {{ include "app.fullname" . }}-ini
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
        - name: temp
          emptyDir: {}
  {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
  {{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
  {{- end }}
  {{- else if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "app.fullname" . }}-data
  {{- end }}
