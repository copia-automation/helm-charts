replicaCount: 1
clusterDomain: cluster.local
image:
  repository: copiaio/conversion-manager
  pullPolicy: Always
imagePullSecrets: []
service:
  http:
    type: NodePort
    port: 3010
    targetPort: 8888
    # clusterIP: None
    #loadBalancerIP:
    #nodePort:
    #externalTrafficPolicy:
    #externalIPs:
    loadBalancerSourceRanges: []
    annotations:
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: conversion-manager.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - conversion-manager.example.com
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
nodeSelector: {}
tolerations: []
affinity: {}
deployment:
  env:
  terminationGracePeriodSeconds: 60
  labels: {}
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
persistence:
  enabled: true
  existingClaim:
  size: 10Gi
  accessModes:
    - ReadWriteOnce
  labels: {}
  annotations: {}
  # storageClass:
# additional volumes to add to the deployment.
extraVolumes:
extraVolumeMounts:
# bash shell script copied verbatim to the start of the init-container.
initPreScript: ""
conversionManager:
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  startupProbe:
    enabled: false
  customStartupProbe:
    httpGet:
      path: /api/v1/ping
      port: 8888
    initialDelaySeconds: 10
    periodSeconds      : 5
    timeoutSeconds     : 2
    failureThreshold   : 10
  customLivenessProbe:
    httpGet:
      path: /api/v1/ping
      port: 8888
    periodSeconds   : 10
    timeoutSeconds  : 2
    failureThreshold: 2
  config:
    APP_NAME: "Conversion Manager"
    RUN_MODE: production
    HOST: conversion-manager.copia.io
    PORT: 8888
